root@desktop:~/github/nginx-app# cat Dockerfile 
## docker build -t company/nginx-app:001 .
FROM nginx
COPY ./build/ /usr/share/nginx/html/
RUN rm -f /etc/nginx/conf.d/default.conf
COPY ./default.conf /etc/nginx/conf.d/
CMD ["nginx"]
EXPOSE 80 

root@desktop:~/github/nginx-app# cat default.conf
server {
    listen 80;
    server_name	localhost;
    access_log /var/log/nginx/access.log; 
    root /usr/share/nginx/html;
    index index.html index.htm;
    location / {
        try_files $uri $uri/ /index.html;
    }
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
       expires 1M;
       access_log off;
       add_header Cache-Control "public";
    }
    location ~* \.(?:css|js)$ {
         try_files $uri =404;
         expires 1y;
         access_log off;
         add_header Cache-Control "public";
    }
    location ~ ^.+\..+$ {
        try_files $uri =404;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

root@desktop:~/github/nginx-app# kubectl apply -f nginx-deployment.yaml 
deployment.apps/nginx-cms-deployment created

root@arun-desktop-e470:~/github/nginx-app# kubectl describe pod nginx-cms-deployment-b46476cb4-vw9p8
Name:           nginx-cms-deployment-b46476cb4-vw9p8
Namespace:      dev-poc-namespace
Priority:       0
Node:           6b8db184-1f0c-4660-906f-e6d99e123890/172.15.0.5
Start Time:     Fri, 08 Nov 2019 17:18:25 -0300
Labels:         app=nginx-cms
                pod-template-hash=b46476cb4
                type=web
Annotations:    <none>
Status:         Running
IP:             172.16.24.6
Controlled By:  ReplicaSet/nginx-cms-deployment-b46476cb4
Containers:
  nginx-cms:
    Container ID:  docker://81947f02fddfbe3ead20c7fcfd8ee229fecf9e86ae1233d3d658f8de8abc6e65
    Image:         private.registry.corp/company-dev-poc/nginx-cms:001
    Image ID:      docker-pullable://private.registry.corp/company-dev-poc/nginx-cms@sha256:514b2a09a3e4f40386bf7d1af40e95700ae0f07b7123c3fbb5f2cbec630b8f86
    Port:          80/TCP
    Host Port:     0/TCP
    Command:
      nginx
    State:          Waiting
      Reason:       CrashLoopBackOff
    Last State:     Terminated
      Reason:       Completed
      Exit Code:    0
      Started:      Fri, 08 Nov 2019 17:18:31 -0300
      Finished:     Fri, 08 Nov 2019 17:18:31 -0300
    Ready:          False
    Restart Count:  1
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-d7ktp (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  default-token-d7ktp:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-d7ktp
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type     Reason     Age                From                                           Message
  ----     ------     ----               ----                                           -------
  Normal   Scheduled  19s                default-scheduler                              Successfully assigned dev-poc-namespace/nginx-cms-deployment-b46476cb4-vw9p8 to 6b8db184-1f0c-4660-906f-e6d99e123890
  Normal   Pulling    15s (x2 over 17s)  kubelet, 6b8db184-1f0c-4660-906f-e6d99e123890  pulling image "private.registry.corp/company-dev-poc/nginx-cms:001"
  Normal   Pulled     13s (x2 over 16s)  kubelet, 6b8db184-1f0c-4660-906f-e6d99e123890  Successfully pulled image "private.registry.corp/company-dev-poc/nginx-cms:001"
  Normal   Created    13s (x2 over 16s)  kubelet, 6b8db184-1f0c-4660-906f-e6d99e123890  Created container
  Normal   Started    13s (x2 over 16s)  kubelet, 6b8db184-1f0c-4660-906f-e6d99e123890  Started container
  Warning  BackOff    12s (x2 over 13s)  kubelet, 6b8db184-1f0c-4660-906f-e6d99e123890  Back-off restarting failed container



root@desktop:~/github/nginx-app#kubectl logs nginx-cms-deployment-b46476cb4-vw9p8
<no output from kubectl logs>

root@desktop:~/github/nginx-app# kubectl get pods
NAME                                     READY   STATUS             RESTARTS   AGE
nginx-cms-deployment-b46476cb4-vw9p8     0/1     CrashLoopBackOff   6          7m24s

root@desktop:~/github/nginx-app# docker run -it private.registry.corp/company-dev-poc/nginx-cms:001 bash
root@fc7ebd431ae2:/# service nginx status
[FAIL] nginx is not running ... failed!

root@fc7ebd431ae2:/# cat /etc/nginx/nginx.conf |grep -v "^#"|grep -v "^ *#$"|grep -v "^ *$"
user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip  on;
    include /etc/nginx/conf.d/*.conf;
}

root@fc7ebd431ae2:/# cat /etc/nginx/conf.d/default.conf |grep -v "^#"|grep -v "^ *#$"|grep -v "^ *$"
server {
    listen 80;
    server_name	localhost;
    access_log /var/log/nginx/access.log; 
    root /usr/share/nginx/html;
    index index.html index.htm;
    location / {
        try_files $uri $uri/ /index.html;
    }
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
       expires 1M;
       access_log off;
       add_header Cache-Control "public";
    }
    location ~* \.(?:css|js)$ {
         try_files $uri =404;
         expires 1y;
         access_log off;
         add_header Cache-Control "public";
    }
    location ~ ^.+\..+$ {
        try_files $uri =404;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
